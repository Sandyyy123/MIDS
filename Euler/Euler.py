########################################
## Euler 1
##
## If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
## The sum of these multiples is 23.
##
## Find the sum of all the multiples of 3 or 5 below 1000.
########################################

sum = 0
for x in range(1000):
    if x % 3 == 0 or x % 5 == 0:
        sum = sum + x
print sum

########################################
## Euler 2
##
#Each new term in the Fibonacci sequence is generated by adding the 
## previous two terms. By starting with 1 and 2, the first 10 terms will be:

## 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

## By considering the terms in the Fibonacci sequence whose values do not exceed four million,
## find the sum of the even-valued terms.
########################################

def fib(n):
    a,b = 1,1
    for i in range(n-1):
        a,b = b,a+b
    return a

x = 3
total = 0 

while (fib(x) < int(4e6)):
    total = total + int(fib(x))
    x = x + 2

print total

    

########################################
## Euler 15
##
## Starting in the top left corner of a 2Ã—2 grid, and only being able to move to the right and down
## , there are exactly 6 routes to the bottom right corner.

########################################        

def createGrid(n,m):
    grid = []
    for x in range(n):
        for j in range(m):
            grid[x][j].append(1)
    return grid

createGrid(2,2)
    
        
