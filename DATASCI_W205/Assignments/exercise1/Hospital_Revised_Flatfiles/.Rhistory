po.control
po.treatment
randomize <- function() sample(c(rep(0,20),rep(1,20)))
randomize()
randomize()
treatment <- randomize()#Conduct randomization for this experiment
treatment
treatment
outcomes <- po.treatment * treatment + po.control*(1-treatment)
outcomes
est.ate <- function(outcome, treat) mean(outcome[treat==1]) -
mean(outcome[treat==0])
ate <- est.ate(outcomes, treatment) #Compute the average treatment
ate #you see a difference, despite there being no effect!
est.ate(outcomes, randomize())
est.ate(outcomes, randomize())
est.ate(outcomes, randomize())
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize()))
plot(density(distribution.under.sharp.null)) #It's likely we get big
plot(density(distribution.under.sharp.null)) #It's likely we get big
plot(density(distribution.under.sharp.null))
plot(density(distribution.under.sharp.null))
abline(v=ate) #pretty similar to one we'd get by chance
mean(ate <= distribution.under.sharp.null) #p-value
po.treatment <- po.control + 25
po.control
po.treatment
treatment <- randomize()
outcomes
outcomes <- po.treatment * treatment + po.control*(1-treatment)
outcomes
ate <- est.ate(outcomes, treatment)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize()))
plot(density(distribution.under.sharp.null))
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize()))
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes, randomize()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
mean(ate < distribution.under.sharp.null)
simulate.study <- function(treatment.effect.size){
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to =
70))
simulate.study <- function(treatment.effect.size){
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
simulate.study <- function(treatment.effect.size){
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + treatment.effect.size
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1-
treatment)
ate <- est.ate(outcomes, treatment)
distribution.under.sharp.null <- replicate(1000,
est.ate(outcomes, randomize()))
return(mean(ate < distribution.under.sharp.null))
}
simulate.study <- function(treatment.effect.size){
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + treatment.effect.size
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1-treatment)
ate <- est.ate(outcomes, treatment)
distribution.under.sharp.null <- replicate(1000, est.ate(outcomes, randomize()))
return(mean(ate < distribution.under.sharp.null)}
simulate.study <- function(treatment.effect.size){
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + treatment.effect.size
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1-treatment)
ate <- est.ate(outcomes, treatment)
distribution.under.sharp.null <- replicate(1000, est.ate(outcomes, randomize()))
return(mean(ate < distribution.under.sharp.null)
}
simulate.study <- function(treatment.effect.size)
{
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + treatment.effect.size
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1-treatment)
ate <- est.ate(outcomes, treatment)
distribution.under.sharp.null <- replicate(1000, est.ate(outcomes, randomize()))
return(mean(ate < distribution.under.sharp.null))
}
simulate.study(0)
p.values <- replicate(10000, simulate.study(0))
plot(density(p.values))
mean(p.values < 0.05)
mean(p.values < 0.05) #how often is p.value under 0.05 when there's no
group
randomize <- function() sample(c(rep(0,20),rep(1,20)))
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
table(group, randomize())
randomize.blocked <- function(){
c(
sample(c(rep(0,10),rep(1,10))), #group A
sample(c(rep(0,10),rep(1,10))) #group B
)
}
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
table(group, randomize.blocked())
sim.normal.study <- function(){
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1 - treatment)
ate <- est.ate(outcomes, treatment)
n.women.treatment <- table(group, treatment)[2,2]
return(list(ate = ate, n.women.treatment = n.women.treatment))
}
results <- t(replicate(1000, sim.normal.study()))
plot(results)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
table(group, treatment)
results
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + 10 #simulate effect of 10
treatment.blocked <- randomize.blocked()
outcomes.blocked <- po.treatment * treatment.blocked + po.control * (1-treatment.blocked)
ate <- est.ate(outcomes.blocked, treatment.blocked)
ate
ate
treatment.blocked <- randomize.blocked()
outcomes.blocked <- po.treatment * treatment.blocked + po.control * (1-treatment.blocked)
ate <- est.ate(outcomes.blocked, treatment.blocked)
ate
distribution.under.sharp.null.blocked <- replicate(5000, est.ate(outcomes.blocked, randomize.blocked()))
plot(density(distribution.under.sharp.null), col="red", ylim=c(0,.17))
abline(v=ate)
mean(ate < distribution.under.sharp.null)
mean(ate < distribution.under.sharp.null)
lines(density(distribution.under.sharp.null.blocked), col="blue")
mean(ate < distribution.under.sharp.null.blocked)
abline(v=ate)
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + 10 #simulate effect of 10
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1-treatment)
summary(lm(outcomes ~ treatment)) #without block indicator
po.control <- c(seq(from = 1, to = 20), seq(from = 51, to = 70))
po.treatment <- po.control + 10 #simulate effect of 10
treatment <- randomize()
outcomes <- po.treatment * treatment + po.control * (1-treatment)
summary(lm(outcomes ~ treatment)) #without block indicator
summary(lm(outcomes ~ treatment + factor(group))) #with block
factor(group)
summary(lm(outcomes ~ treatment + factor(group))) #with block indicator
n.classrooms <- 8
n.students <- 16
lapply(1:n.classrooms, function(x)
rep(x,times=n.students))
unlist(lapply(1:n.classrooms, function(x)
rep(x,times=n.students)))
unique(classroom.ids)
classroom.ids <- unlist(lapply(1:n.classrooms, function(x)
rep(x,times=n.students)))
unique(classroom.ids)
rnorm(length(all.classrooms))
all.classrooms <- unique(classroom.ids)
all.classrooms
rnorm(length(all.classrooms))
classroom.level.noise
classroom.level.noise <- rnorm(length(all.classrooms))
classroom.level.noise
student.outcomes.control <- rnorm(length(classroom.ids)) +
classroom.level.noise[classroom.ids]
student.outcomes.control
student.outcomes.control
classroom.level.noise
length(classroom.ids)
rnorm(length(classroom.ids))
classroom.ids
classroom.level.noise[classroom.ids]
classroom.level.noise
classroom.level.noise[classroom.ids]
student.outcomes.control
student.outcomes.treat <- student.outcomes.control + 0.75
randomize.clustered <- function(){
treat.classroom.ids <- sample(all.classrooms, n.classrooms/2)
return(
as.numeric(classroom.ids %in% treat.classroom.ids)
)
}
randomize.clustered <- function(){
treat.classroom.ids <- sample(all.classrooms, n.classrooms/2)
return(
as.numeric(classroom.ids %in% treat.classroom.ids)
)
}
randomize.clustered()
randomize.clustered()
randomize.clustered()
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
mean(ate < distribution.under.sharp.null)
mean(ate < distribution.under.sharp.null)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
treat <- randomize.clustered()
outcomes <- treat * student.outcomes.treat + (1-treat) *
student.outcomes.control
ate <- est.ate(outcomes, treat)
ate
distribution.under.sharp.null <- replicate(5000, est.ate(outcomes,
randomize.clustered()))
plot(density(distribution.under.sharp.null))
abline(v=ate)
ls = ls()
rm(ls = ls())
rm(ls=ls())
rm(ls=ls())
rm(list=ls())
ls=ls()
lll=ls()
rm(lll=ls())
rm(lll=ls())
rm(list=ls())
ls()
list.files()
getwd()
setwd("/Users/ceccarelli/MIDS/DATASCI_W205/Assignments/Hospital_Revised_Flatfiles/")
list.files()
files <- list.files()
files
.csv %in% files
c(".csv") %in% files
c("*.csv") %in% files
grep(".csv",files)
length(files)
files[grep(".csv",files)]
files<-list.files()
setwd("/Users/ceccarelli/MIDS/DATASCI_W205/Assignments/Hospital_Revised_Flatfiles/")
files[grep(".csv",files)]
length(files[grep(".csv",files)])
files[grep(".csv",files)][1]
files[grep(".csv",files)][2]
gsub(".csv","",files[grep(".csv",files)])
for(i in 1:length(files[grep(".csv",files)]))
{
oname = files[grep(".csv",files)][i]
paste(oname)
##assign(oname, read.csv(oname))
}
for(i in 1:length(files[grep(".csv",files)]))
{
oname = files[grep(".csv",files)][i]
assign(gsub(".csv","",files[grep(".csv",files)])[i], read.csv(oname))
}
View(`Complications - Hospital`)
rm(list=ls())
files<-list.files()
setwd("/Users/ceccarelli/MIDS/DATASCI_W205/Assignments/Hospital_Revised_Flatfiles/")
for(i in 1:length(files[grep(".csv",files)]))
{
oname = files[grep(".csv",files)][i]
assign(gsub(".csv","",files[grep(".csv",files)])[i], read.csv(oname))
}
View(`Hospital General Information`)
View(`Timely and Effective Care - Hospital`)
rm(list=ls())
