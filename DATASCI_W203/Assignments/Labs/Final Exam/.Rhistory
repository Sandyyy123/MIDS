f <- as.factor(f)
levels(f) <- list(...)
f
}
dating$life_quality_cleaned <- changelevels(dating$life_quality, "5"=c("1"), "4"=c("2"), "3"=c("3"),"2"=c("4"),"1"=c("5"),"NA"=c("Don't know","Refused"))
levels(dating$life_quality_cleaned)
##appears NA is a string in dating$life_quality_cleaned, recode to true NA
is.na(dating) <- dating=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
dating$life_quality_cleaned <- factor(dating$life_quality_cleaned)
#check summary output
summary(dating$life_quality_cleaned)
#compute the mean for life quality to answer 15. a
mean(as.numeric(dating$life_quality_cleaned), na.rm =TRUE)
counts_yrs = as.data.frame(table(dating$years_in_relationship))
counts_yrs[with(counts_yrs,order(-Freq)),]
dating$years_in_relationship_cleaned <- dating$years_in_relationship
dating$years_in_relationship_cleaned <- mapvalues(dating$years_in_relationship_cleaned, from = c(" ","Refused"), to= c("NA", "NA"))
is.na(dating) <- dating=="NA"
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
counts = as.data.frame(table(dating$years_in_relationship_cleaned))
counts[with(counts,order(-Freq)),]
sum(as.numeric(counts$Freq))
hist(as.numeric(dating$years_in_relationship_cleaned))
dating$years_in_relationship_cleaned.spurious <- as.numeric(as.character(dating$years_in_relationship_cleaned)) > dating$age
table(dating$years_in_relationship_cleaned.spurious)
View(dating)
View(data.frame(dating[dating[,"years_in_relationship_cleaned.spurious"],]))
is.na(years_in_relationship_cleaned) <- years_in_relationship_cleaned.spurious==TRUE
is.na(dating$years_in_relationship_cleaned) <- dating$years_in_relationship_cleaned.spurious==TRUE
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
table(dating$years_in_relationship_cleaned.spurious)
table(dating$years_in_relationship_cleaned)
counts = as.data.frame(table(dating$years_in_relationship_cleaned))
counts[with(counts,order(-Freq)),]
sum(as.numeric(counts$Freq))
sum(as.numeric(counts$Freq))-2252
mean(dating$years_in_relationship_cleaned,rm.na = TRUE)
dating$years_in_relationship_cleaned <- as.numeric(as.character(dating$years_in_relationship_cleaned))
sum(as.numeric(counts$Freq))
hist(as.numeric(dating$years_in_relationship_cleaned))
counts = as.data.frame(table(dating$years_in_relationship_cleaned))
counts[with(counts,order(-Freq)),]
sum(as.numeric(counts$Freq))
mean(dating$years_in_relationship_cleaned,rm.na = TRUE)
mean(dating$years_in_relationship_cleaned, rm.na = TRUE)
mean(dating$years_in_relationship_cleaned, rm.na = TRUE)
mean(dating$years_in_relationship_cleaned, rm.na = TRUE)
mean(dating$years_in_relationship_cleaned, rm.na = TRUE)
mean(dating$years_in_relationship_cleaned)
mean(dating$years_in_relationship_cleaned)
mean(as.numeric(dating$years_in_relationship_cleaned))
View(dating)
summary(dating$years_in_relationship_cleaned)
mean(dating$years_in_relationship_cleaned)
mean(as.numeric(dating$years_in_relationship_cleaned), na.rm =TRUE)
summary(dating$use_internet)
dating$use_internet_cleaned <- mapvalues(dating$used_internet, from = c(" ","Don't know","Refused"), to= c("NA","NA","NA"))
dating$use_internet_cleaned <- mapvalues(dating$used_internet, from = c("","Don't know","Refused"), to= c("NA","NA","NA"))
dating$use_internet_cleaned <- mapvalues(dating$use_internet, from = c(" ","Don't know","Refused"), to= c("NA","NA","NA"))
summary(dating$use_internet_cleaned)
is.na(dating) <- dating=="NA"
dating$use_internet_cleaned<- factor(dating$use_internet_cleaned)
summary(dating$use_internet_cleaned)
lim_rows = complete.cases(dating$life_quality_cleaned, dating$use_internet_cleaned, dating$years_in_relationship_cleaned))
lim_rows = complete.cases(dating$life_quality_cleaned, dating$use_internet_cleaned, dating$years_in_relationship_cleaned)
lim_rows
dating_lim = dating[lim_rows,]
length(dating_lim)
count(dating_lim)
nrows(dating_lim)
nrow(dating_lim)
lmod1 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned, dating)
lmod1 <- lm(life_quality_cleaned ~ as.numeric(years_in_relationship_cleaned), dating)
lmod1 <- lm(life_quality_cleaned ~ as.character(years_in_relationship_cleaned),dating)
lmod1
lmod1 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned,dating_lim)
lmod1
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Final Exam/')
rm( list = ls() )
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
library(gmodels)
library(MASS)
library(plyr)
dating <- read.csv("Dating.csv",header = TRUE)
#inspect life_quality variable
summary(dating$life_quality)
levels(dating$life_quality)
#wrapper function to easily recode factors
changelevels <- function(f, ...) {
f <- as.factor(f)
levels(f) <- list(...)
f
}
dating$life_quality_cleaned <- changelevels(dating$life_quality, "5"=c("1"), "4"=c("2"), "3"=c("3"),"2"=c("4"),"1"=c("5"),"NA"=c("Don't know","Refused"))
levels(dating$life_quality_cleaned)
##appears NA is a string in dating$life_quality_cleaned, recode to true NA
is.na(dating) <- dating=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
dating$life_quality_cleaned <- factor(dating$life_quality_cleaned)
#check summary output
summary(dating$life_quality_cleaned)
#compute the mean for life quality to answer 15. a
mean(as.numeric(dating$life_quality_cleaned), na.rm =TRUE)
counts_yrs = as.data.frame(table(dating$years_in_relationship))
counts_yrs[with(counts_yrs,order(-Freq)),]
dating$years_in_relationship_cleaned <- dating$years_in_relationship
dating$years_in_relationship_cleaned <- mapvalues(dating$years_in_relationship_cleaned, from = c(" ","Refused"), to= c("NA", "NA"))
is.na(dating) <- dating=="NA"
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
counts = as.data.frame(table(dating$years_in_relationship_cleaned))
counts[with(counts,order(-Freq)),]
sum(as.numeric(counts$Freq))
hist(as.numeric(dating$years_in_relationship_cleaned))
dating$years_in_relationship_cleaned.spurious <- as.numeric(as.character(dating$years_in_relationship_cleaned)) > dating$age
table(dating$years_in_relationship_cleaned.spurious)
is.na(dating$years_in_relationship_cleaned) <- dating$years_in_relationship_cleaned.spurious==TRUE
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
mean(as.numeric(dating$years_in_relationship_cleaned), na.rm =TRUE)
mean(as.numeric(dating$years_in_relationship_cleaned), na.rm =TRUE)
mean(as.numeric(dating$years_in_relationship_cleaned), na.rm =TRUE)
dating$years_in_relationship_cleaned <- as.numeric(as.character(dating$years_in_relat
onship_cleaned))
dating$years_in_relationship_cleaned <- as.numeric(as.character(dating$years_in_relationship_cleaned))
mean(as.numeric(dating$years_in_relationship_cleaned), na.rm =TRUE)
mean(as.numeric(dating$years_in_relationship_cleaned), na.rm =TRUE)
dating$years_in_relationship_cleaned <- as.numeric(as.character(dating$years_in_relationship_cleaned))
mean(dating$years_in_relationship_cleaned, na.rm =TRUE)
##check use_internet
summary(dating$use_internet)
#remap values
dating$use_internet_cleaned <- mapvalues(dating$use_internet, from = c(" ","Don't know","Refused"), to= c("NA","NA","NA"))
## NA is a string in dating$use_internet_cleaned, recode to true NA
is.na(dating) <- dating=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
dating$use_internet_cleaned<- factor(dating$use_internet_cleaned)
##check use_internet again
summary(dating$use_internet_cleaned)
#compute lim_rows logical vector for the 3 variables in question
lim_rows = complete.cases(dating$life_quality_cleaned, dating$use_internet_cleaned, dating$years_in_relationship_cleaned)
## just the complete cases, count the rows with nrow to answer 15. c
dating_lim = dating[lim_rows,]
nrow(dating_lim)
lmod1 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned,dating_lim)
summary(lmod1)
summary(lmod1)
summary(dating$life_quality_cleaned)
type(dating$life_quality_cleaned)
str(dating$life_quality_cleaned)
dating$life_quality_cleaned <- as.numeric(as.character(dating$life_quality_cleaned))
mean(dating$life_quality_cleaned, na.rm =TRUE)
mean(dating$life_quality_cleaned, na.rm =TRUE)
summary(dating$life_quality_cleaned)
str(dating$life_quality_cleaned)
hist(dating$life_quality_cleaned)
lim_rows = complete.cases(dating$life_quality_cleaned, dating$use_internet_cleaned, dating$years_in_relationship_cleaned)
dating_lim = dating[lim_rows,]
nrow(dating_lim)
lmod1 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned,dating_lim)
summary(lmod1)
coef(lmod1)
lmod2 <- lm(life_quality_cleaned ~ use_internet_cleaned + years_in_relat
onship_cleaned, dating)
lmod2 <- lm(life_quality_cleaned ~ use_internet_cleaned + years_in_relat
ionship_cleaned, dating)
lmod2 <- lm(life_quality_cleaned ~ use_internet_cleaned + years_in_relat
ionship_cleaned, dating_lim)
lmod2 <- lm(life_quality_cleaned ~ use_internet_cleaned + years_in_relationship_cleaned, dating_lim)
coef(lmod1)
coef(lmod2)
summary(lmod2)
summary(lmod1)
anova(lmod1, lmod2)
AIC(lmod1)
AIC(lmod2)
coef(lmod2)
summary(lmod2)
anova(lmod1, lmod2)
lmod2 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned + use_internet_cleaned, dating_lim)
summary(lmod2)
anova(lmod1, lmod2)
AIC(lmod1)
AIC(lmod2)
summmary(dating$marital_status)
summmary(dating$marital_status)
summmary(dating$marital_status)
summary(dating$marital_status)
summary(dating$marital_status)
summary(dating$use_reddit)
summary(dating$marital_status)
summary(dating$region)
summary(dating$life_quality)
anova(dating$region,dating$life_quality)
chisq.test(dating$region,dating$life_quality)
summary(dating$life_quality)
summary(dating$region)
summary(dating$flirted_online)
summary(dating$years_in_relationship)
summary(dating$(lgbt)
summary(dating$adults_in_household)
summary(dating$adults_in_household)
summary(dating$(lgbt)
summary(dating$(lgbt))
summary(dating$lgbt)
summary(dating$adults_in_household)
chisq.test(dating$lgbt,dating$adults_in_household)
anova(dating$lgbt,dating$adults_in_household)
dating$children0_5+ dating$children6_100 + dating$children12_17
summary(dating$children0_5)
summary(dating$children6_100)
summary(dating$children6_10)
View(dating)
summary(dating$children6_10+ dating$children6_11 + dating$children12_17)
dating$children6_10+ dating$children6_11 + dating$children12_17
summary(dating$children1_5)
summary(dating$children6_11)
summary(dating$children12_17)
summary(dating$children0_5)
summary(dating$children6_11)
summary(dating$children12_17)
summary(dating$flirted_online)
dating$flirted_online_cleaned <- mapvalues(dating$flirted_online, from = c(" ","Don't know","Refused"), to= c("NA","NA","NA"))
summary(dating$flirted_online_cleaned)
contrasts(dating$flirted_online_cleaned)
## NA is a string in dating$use_internet_cleaned, recode to true NA
is.na(dating) <- dating=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
dating$flirted_online_cleaned<- factor(dating$flirted_online_cleaned)
summary(dating$flirted_online_cleaned)
summary(dating$flirted_online_cleaned)
contrasts(dating$flirted_online_cleaned)
gfr<-read.delim(file="GlastonburyFestivalRegression.dat", header = TRUE)
levels(dating$flirted_online_cleaned)
contrasts(dating$flirted_online_cleaned)<-contr.treatment(2,base = 2)
summary(dating$flirted_online_cleaned)
levels(dating$flirted_online_cleaned)
dating$flirted_online_cleaned
contrasts(dating$flirted_online_cleaned)<-contr.treatment(2,base = 1)
dating$flirted_online_cleaned
mean(dating$flirted_online_cleaned)
mean(dating$flirted_online_cleaned, na.rm = TRUE)
View(dating_lim)
summary(dating$flirted_online_cleaned)
by(dating, dating$flirted_online_cleaned, mean)
by(dating, dating$flirted_online_cleaned, mean, na.rm = TRUE)
by(dating, dating$flirted_online_cleaned, mean, na.rm = TRUE)
by(dating, dating$flirted_online_cleaned[!dating$flirted_online_cleaned==NA,], mean, na.rm = TRUE)
by(dating, dating$flirted_online_cleaned[!flirted_online_cleaned==NA,], mean, na.rm = TRUE)
by(dating, dating$flirted_online_cleaned[,], mean, na.rm = TRUE)
by(dating, dating$flirted_online_cleaned, mean, na.rm = TRUE)
by(dating, dating[!which(flirted_online_cleaned==NA),flirted_online_cleaned] mean, na.rm = TRUE)
by(dating, dating[which(flirted_online_cleaned==NA),flirted_online_cleaned] mean, na.rm = TRUE)
by(dating, dating[which(flirted_online_cleaned==NA),flirted_online_cleaned] mean)
dating[which(flirted_online_cleaned==NA),]
dating[which(flirted_online_cleaned==NA),]
dating[which("flirted_online_cleaned"==NA),]
dating[which("flirted_online_cleaned"==NA),]
dating[!which("flirted_online_cleaned"==NA),]
dating[which(dating$flirted_online_cleaning==NA),]
dating[which(is.na(dating$flirted_online_cleaning),]
dating[which(is.na(dating$flirted_online_cleaning),]
dating[is.na(dating$flirted_online_cleaning),]
summary(dating$flirted_online_cleaning)
summary(dating$flirted_online_cleaning)
dating[is.na(dating$flirted_online_cleaned),]
dating[!is.na(dating$flirted_online_cleaned),]
View(dating[!is.na(dating$flirted_online_cleaned),])
by(dating, dating[!is.na(dating$flirted_online_cleaned),],flirted_online_cleaned], mean)
View(dating[!is.na(dating$flirted_online_cleaned),dating$flirted_online_cleaned])
View(dating[!is.na(dating$flirted_online_cleaned),dating$flirted_online_cleaned])
View(dating[!is.na(dating$flirted_online_cleaned),flirted_online_cleaned])
View(dating[!is.na(dating$flirted_online_cleaned),"flirted_online_cleaned"])
by(dating, dating[!is.na(dating$flirted_online_cleaned),"flirted_online_cleaned"] , mean)
by(dating[!is.na(dating$flirted_online_cleaned),"flirted_online_cleaned"] , mean)
summary(usr)
summary(dating$usr)
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
mean(data.complete(dating[,c("flirted_online_cleaned")], c("flirted_online_cleaned")))
data.complete(dating[,c("flirted_online_cleaned")], c("flirted_online_cleaned"))
by(dating, dating$flirted_online_cleaned, mean(x, na.rm = TRUE))
by(dating, dating$flirted_online_cleaned, mean(na.rm = TRUE))
by(dating$flirted_online_cleaned, dating$flirted_online_cleaned, mean(x, na.rm = TRUE))
by(dating$flirted_online_cleaned, mean(x, na.rm = TRUE))
summary(dating$flirted_online_cleaned)
dating$flirted_online_cleaned_recode <- ifelse(dating$flirted_online_cleaned=="Yes", 1, 0)
summary(dating$flirted_online_cleaned_recode)
mean(dating$flirted_online_cleaned_recode)
mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)
lmod2 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned + use_internet_cleaned, dating_lim)
summary(lmod2)
plot(life_quality_cleaned ~ years_in_relationship_cleaned)
plot(dating$life_quality_cleaned ~ dating$years_in_relationship_cleaned)
lmod1 <- lm(life_quality_cleaned ~ years_in_relationship_cleaned, dating_lim)
abline(lmod1)
)
abline(lmod1)
summary(lmod1)
plot(lmod1)
mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)
summary(dating$flirted_online_cleaned_recode)
levels(dating$flirted_online_cleaned)
summary(dating$flirted_online)
#remap values
dating$flirted_online_cleaned <- mapvalues(dating$flirted_online, from = c(" ","Don't know","Refused"), to= c("NA","NA","NA"))
## NA is a string in dating$flirted_online_cleaned, recode to true NA
is.na(dating) <- dating=="NA"
dating$flirted_online_cleaned<- factor(dating$flirted_online_cleaned)
summary(dating$flirted_online_cleaned)
contrasts(dating$flirted_online_cleaned)<-contr.treatment(2,base = 1)
levels(dating$flirted_online_cleaned)
summary(dating$flirted_online_cleaned)
table(dating$flirted_online_cleaned)
t=table(dating$flirted_online_cleaned)
D = data.frame( matrix(t,ncol=2))
View(D)
rownames(Table)
rownames(t)
as.numeric( rownames(t))
D[,1]+D[,2]
D$num.obs = D[,1]+D[,2]
View(D)
D$srate = D[,2]/D$num.obs
View(D)
1-mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)
mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)/(1-mean(dating$flirted_online_cleaned_recode, na.rm=TRUE))
1/(mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)/(1-mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)))
1/(mean(dating$flirted_online_cleaned_recode, na.rm=TRUE))
mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)/(1-mean(dating$flirted_online_cleaned_recode, na.rm=TRUE))
(1-mean(dating$flirted_online_cleaned_recode, na.rm=TRUE))/(mean(dating$flirted_online_cleaned_recode, na.rm=TRUE))
mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)
mean(dating$flirted_online_cleaned_recode, na.rm=TRUE)/(1-mean(dating$flirted_online_cleaned_recode, na.rm=TRUE))
.30/.7
(1-0.2072072)/0.2072072
summary(dating$usr)
dating$usr_cleaned <- mapvalues(dating$usr_cleaned, from = c(" "), to= c("NA"))
dating$usr_cleaned <- mapvalues(dating$usr, from = c(" "), to= c("NA"))
is.na(dating) <- dating=="NA"
dating$usr_cleaned<- factor(dating$usr_cleaned)
summary(dating$usr_cleaned)
lim_rows_glm = complete.cases(dating$flirted_online_cleaned_recode, dating$usr_cleaned)
dating_lim_glm = dating[lim_rows_glm,]
nrow(dating_lim_glm)
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
summary(dating$usr_cleaned)
summary(dating_lim_glm$usr_cleaned)
summary(model1)
contrasts(dating$ usr_cleaned)
summary(dating$usr)
contrasts(dating$ usr_cleaned)
contrasts(dating$ usr_cleaned)<-contr.treatment(3,base = 2)
dating$usr_cleaned
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
dating$usr_cleaned
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 1)
dating$usr_cleaned
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
## Begin with a bivariate logistic regression given
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
exp(coef(model1))
summary(dating_lim_glm$usr_cleaned)
dating$usr_cleaned <- mapvalues(dating$usr, from = c(" "), to= c("BASE"))
dating$usr_cleaned<- factor(dating$usr_cleaned)
summary(dating$usr_cleaned)
lim_rows_glm = complete.cases(dating$flirted_online_cleaned_recode, dating$usr_cleaned)
dating_lim_glm = dating[lim_rows_glm,]
summary(dating_lim_glm$usr_cleaned)
contrasts(dating$usr_cleaned)
contrasts(dating$usr_cleaned)<-contr.treatment(4,base = 1)
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
dating$usr_cleaned <- mapvalues(dating$usr, from = c(" "), to= c("NA"))
is.na(dating) <- dating=="NA"
dating$usr_cleaned<- factor(dating$usr_cleaned)
summary(dating$usr_cleaned)
lim_rows_glm = complete.cases(dating$flirted_online_cleaned_recode, dating$usr_cleaned)
dating_lim_glm = dating[lim_rows_glm,]
summary(dating_lim_glm$usr_cleaned)
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
contrasts(dating$usr_cleaned)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 1)
contrasts(dating$usr_cleaned)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
contrasts(dating$usr_cleaned)<
contrasts(dating$usr_cleaned)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 3)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 3)
dating$usr_cleaned
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 1)
dating$usr_cleaned
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 1)
dating$usr_cleaned
## Begin with a bivariate logistic regression given
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
#grab AIC criterion
summary(model1)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 2)
dating$usr_cleaned
## Begin with a bivariate logistic regression given
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
#grab AIC criterion
summary(model1)
exp(coef(model1))
attr(model1,"contrasts")
dating$usr_cleaned <- mapvalues(dating$usr, from = c(" "), to= c("NA"))
is.na(dating) <- dating=="NA"
dating$usr_cleaned<- factor(dating$usr_cleaned)
summary(dating$usr_cleaned)
lim_rows_glm = complete.cases(dating$flirted_online_cleaned_recode, dating$usr_cleaned)
## just the complete cases
dating_lim_glm = dating[lim_rows_glm,]
summary(dating_lim_glm$usr_cleaned)
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
attr(model1,"contrasts")
summary(model1)
contr.treatment(3,base = 2)
contr.treatment(3,base = 2)
contr.treatment(3,base = 2)
contr.treatment(3,base = 1)
contrasts(dating$usr_cleaned)
attr(model1,"contrasts")
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
library(multcomp)
hsb2 <- read.csv("http://www.ats.ucla.edu/stat/data/hsb2.csv")
m1 <- lm(read ~ socst + factor(ses) * factor(female), data = hsb2)
summary(m1)
contr.treatment(3,base = 1)
contrasts(dating$usr_cleaned)<-contr.treatment(3,base = 1)
dating$usr_cleaned
model1 = glm(flirted_online_cleaned_recode ~ usr_cleaned, data=dating_lim_glm, family=binomial())
summary(model1)
exp(coef(model1))
2.1015464/0.1589404
summary(dating$flirted_online)
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Final Exam/')
rm( list = ls() )
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Final Exam/')
rm( list = ls() )
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
library(gmodels)
library(MASS)
library(plyr)
dating <- read.csv("Dating.csv",header = TRUE)
summary(dating$life_quality)
levels(dating$life_quality)
#wrapper function to easily recode factors
changelevels <- function(f, ...) {
f <- as.factor(f)
levels(f) <- list(...)
f
}
dating$life_quality_cleaned <- changelevels(dating$life_quality, "5"=c("1"), "4"=c("2"), "3"=c("3"),"2"=c("4"),"1"=c("5"),"NA"=c("Don't know","Refused"))
levels(dating$life_quality_cleaned)
is.na(dating) <- dating=="NA"
dating$life_quality_cleaned <- factor(dating$life_quality_cleaned)
summary(dating$life_quality_cleaned)
dating$life_quality_cleaned <- as.numeric(as.character(dating$life_quality_cleaned))
mean(dating$life_quality_cleaned, na.rm =TRUE)
summary(dating$life_quality_cleaned)
hist(dating$life_quality_cleaned)
counts_yrs = as.data.frame(table(dating$years_in_relationship))
counts_yrs[with(counts_yrs,order(-Freq)),]
counts_age = as.data.frame(table(dating$age))
counts_age[with(counts_age,order(-Freq)),]
dating$years_in_relationship_cleaned <- dating$years_in_relationship
dating$years_in_relationship_cleaned <- dating$years_in_relationship
#in this instance, use plyr instead to mapvalues
dating$years_in_relationship_cleaned <- mapvalues(dating$years_in_relationship_cleaned, from = c(" ","Refused"), to= c("NA", "NA"))
##appears NA is a string in dating$years_in_relationship_cleaned, recode to true NA
is.na(dating) <- dating=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
#recheck counts to make sure nothing amiss
counts = as.data.frame(table(dating$years_in_relationship_cleaned))
counts[with(counts,order(-Freq)),]
#check total counts, 59 NA's not included
sum(as.numeric(counts$Freq))
hist(as.numeric(dating$years_in_relationship_cleaned))
dating$years_in_relationship_cleaned <- as.numeric(as.character(dating$years_in_relationship_cleaned))
dating$years_in_relationship_cleaned.spurious <- as.numeric(as.character(dating$years_in_relationship_cleaned)) > dating$age
table(dating$years_in_relationship_cleaned.spurious)
is.na(dating$years_in_relationship_cleaned) <- dating$years_in_relationship_cleaned.spurious==TRUE
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
#compute the mean for life quality to answer 15. b
mean(dating$years_in_relationship_cleaned, na.rm =TRUE)
dating$years_in_relationship_cleaned <- factor(dating$years_in_relationship_cleaned)
mean(dating$years_in_relationship_cleaned, na.rm =TRUE)
mean( as.numeric(as.character(dating$years_in_relationship_cleaned), na.rm =TRUE)
mean( as.numeric(as.character(dating$years_in_relationship_cleaned), na.rm =TRUE)
mean( as.numeric(as.character(dating$years_in_relationship_cleaned)), na.rm =TRUE)
dating$years_in_relationship_cleaned <- as.numeric(as.character(dating$years_in_relationship_cleaned))
mean(dating$years_in_relationship_cleaned  na.rm =TRUE)
mean(dating$years_in_relationship_cleaned,  na.rm =TRUE)
summary(dating$use_internet)
