<<<<<<< HEAD
abline(v = mx, col = "blue", lwd = 2)
#Part 2b. Data Import (25 points)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
gdp.data_complete <- gdp.data
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
mx
mx <- mean(gdp.data_complete$gdp_growth, na.rm = true)
mx <- mean(gdp.data_complete$gdp_growth, na.rm = TRUE)
mx
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
mx
summary(gdp_patent.data_complete)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
mx
#store histogram first as a variable to inspect its properties
#histinfo <- hist(gdp.data_complete$gdp_growth, 100)
#histinfo
# Question 11
#view the histogram and observe its shape
hist(gdp.data_complete$gdp_growth)
#change number of breaks to observe slightly different version
hist(gdp.data_complete$gdp_growth, breaks = 20)
# Question 12
#create new high_growth variable based on comparison of gdp_growth to population mean
gdp.data_complete$high_growth <- gdp.data_complete$gdp_growth > mx
#count TRUE / FALSE values
summary(gdp.data_complete$high_growth)
#add mean line to histogram to explain TRUE/FALSE breakdown
abline(v = mx, col = "blue", lwd = 2)
#Part 2b. Data Import (25 points)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
View(gdp_patent.data_complete)
View(gdp.data_complete)
View(patent.data_complete)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
mx
#store histogram first as a variable to inspect its properties
#histinfo <- hist(gdp.data_complete$gdp_growth, 100)
#histinfo
# Question 11
#view the histogram and observe its shape
hist(gdp.data_complete$gdp_growth)
#change number of breaks to observe slightly different version
hist(gdp.data_complete$gdp_growth, breaks = 20)
# Question 12
#create new high_growth variable based on comparison of gdp_growth to population mean
gdp.data_complete$high_growth <- gdp.data_complete$gdp_growth > mx
#count TRUE / FALSE values
summary(gdp.data_complete$high_growth)
#add mean line to histogram to explain TRUE/FALSE breakdown
abline(v = mx, col = "blue", lwd = 2)
#Part 2b. Data Import (25 points)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
paste(c("mean is: ", mx)
d
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
paste("mean is: ", mx)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
paste("mean is: ", mx)
#store histogram first as a variable to inspect its properties
#histinfo <- hist(gdp.data_complete$gdp_growth, 100)
#histinfo
# Question 11
#view the histogram and observe its shape
hist(gdp.data_complete$gdp_growth)
#change number of breaks to observe slightly different version
hist(gdp.data_complete$gdp_growth, breaks = 20)
# Question 12
#create new high_growth variable based on comparison of gdp_growth to population mean
gdp.data_complete$high_growth <- gdp.data_complete$gdp_growth > mx
#count TRUE / FALSE values
summary(gdp.data_complete$high_growth)
#add mean line to histogram to explain TRUE/FALSE breakdown
abline(v = mx, col = "blue", lwd = 2)
#Part 2b. Data Import (25 points)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
#plot just the nominal values - patent apps vs gdp in 2012
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##final plot
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
#add country labels to graph
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
paste("mean is: ", mx)
#store histogram first as a variable to inspect its properties
#histinfo <- hist(gdp.data_complete$gdp_growth, 100)
#histinfo
# Question 11
#view the histogram and observe its shape
hist(gdp.data_complete$gdp_growth)
#change number of breaks to observe slightly different version
hist(gdp.data_complete$gdp_growth, breaks = 50)
# Question 12
#create new high_growth variable based on comparison of gdp_growth to population mean
gdp.data_complete$high_growth <- gdp.data_complete$gdp_growth > mx
#count TRUE / FALSE values
summary(gdp.data_complete$high_growth)
#add mean line to histogram to explain TRUE/FALSE breakdown
abline(v = mx, col = "blue", lwd = 2)
#Part 2b. Data Import (25 points)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
#plot just the nominal values - patent apps vs gdp in 2012
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##final plot
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
#add country labels to graph
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
#Part 2a. Variable Manipulations (10 points each)
#set up working envrionment
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
paste("mean is: ", mx)
#store histogram first as a variable to inspect its properties
#histinfo <- hist(gdp.data_complete$gdp_growth, 100)
#histinfo
# Question 11
#view the histogram and observe its shape
hist(gdp.data_complete$gdp_growth)
#change number of breaks to observe slightly different version
hist(gdp.data_complete$gdp_growth, breaks = 100)
# Question 12
#create new high_growth variable based on comparison of gdp_growth to population mean
gdp.data_complete$high_growth <- gdp.data_complete$gdp_growth > mx
#count TRUE / FALSE values
summary(gdp.data_complete$high_growth)
#add mean line to histogram to explain TRUE/FALSE breakdown
abline(v = mx, col = "blue", lwd = 2)
#Part 2b. Data Import (25 points)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
#plot just the nominal values - patent apps vs gdp in 2012
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##final plot
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
#add country labels to graph
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
hist(gdp.data_complete$gdp_growth, breaks = 100)
#Data Sourced from World Intellectual Property Organization
#http://ipstats.wipo.int/ipstatv2/index.htm?tab=patent
#Report Parmaters:
#Intellectual Property Right: Patent
#Year Range: 2011 - 2012
#Reporting Type: Total Count by Filing Office
#Indicator: 1 - Total patent applications
#did minor data cleaning in text editor to remove extraneous header lines
patent.data <- read.csv("patent_applications_2011_2012_cleaned.csv", sep=",", header = TRUE)
patent.data_complete <- patent.data[c("Office","X2011","X2012")]
names(patent.data_complete) <- c("Country","PatentApplications2011","PatentApplications2012")
#create growth variable
patent.data_complete$patent_growth <- patent.data_complete$PatentApplications2012 - patent.data_complete$PatentApplications2011
#merge data together -- keep only those observations that match
gdp_patent.data_complete <- merge(gdp.data_complete,patent.data_complete,by="Country")
gdp_patent.data_complete <- data.complete(gdp_patent.data_complete,c('gdp_growth','patent_growth'))
#plot just the nominal values - patent apps vs gdp in 2012
plot(gdp_patent.data_complete$gdp2012
, gdp_patent.data_complete$PatentApplications2012
, log = "xy"
, xlab="GDP (log)"
, ylab="Patent Applications (log)"
, title("Country Patents vs GDP in 2012"))
##final plot
##this plots the positive growth only, omits negative growth due to log transform
plot(gdp_patent.data_complete$gdp_growth
, gdp_patent.data_complete$patent_growth
, log = "xy"
, xlab="GDP growth (log)"
, ylab="Patent growth (log)"
, title("Patent vs GDP growth between 2011-2012")
, col= "blue", pch = 19, cex = 1, lty = "solid")
#add country labels to graph
textxy(gdp_patent.data_complete$gdp_growth, gdp_patent.data_complete$patent_growth, gdp_patent.data_complete$Country)
=======
install.packages("Rcmdr")
install.packages("ggplot2")
test_pop <- c(10,4,12,5)
mean(test_pop)
stderr(test_pop)
var(test_pop)
sqrt(var(test_pop))
test_pop <- c(10,4,12,5,10000)
sqrt(var(test_pop))
rnorm(1000,50,20)
hist(rnorm(1000,50,20))
hist(rnorm(1000,50,1))
hist(rnorm(1000,50,1000))
getwd()
list.dirs()
list.files(".")
setwd("/Users/gdc/Documents/MIDS/DATASCI_W203/Assignments/Labs/Lab 1/")
list.files(".")
head("GDP_World_Bank.csv")
>>>>>>> 8ccfe2c652ae9b7502f5eedb1edc3c4a5432d448
