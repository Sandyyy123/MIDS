completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
is.na(GSS) <- GSS=="NA"
summary(GSS$marital)
summary(GSS$politics)
GSS$martial = factor(GSS$marital)
summary(GSS$marital)
GSS$martial = factor(GSS$marital)
is.na(GSS) <- GSS=="NA"
GSS$martial = factor(GSS$marital)
levels(GSS$marital)
summary(GSS$politics)
summary(GSS$marital)
rm( list = ls() )
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
#load supplied R data file
load("GSS.Rdata")
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
rm( list = ls() )
library(ggplot2)
library(car)
library(psych)
#load supplied R data file
load("GSS.Rdata")
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
levels(GSS$marital)
factor(GSS$marital)
is.na(GSS) <- GSS=="NA"
factor(GSS$marital)
GSS$marital <- factor(GSS$marital)
levels(GSS$marital)
summary(GSS$marital)
summary(GSS$political)
summary(GSS$politics)
GSS.mar_pol <- data.complete(GSS[,"politics"], c("marital"))
GSS.mar_pol <- data.complete(GSS[,"politics","marital"], c("politics","marital"))
summary(GSS$politics)
GSS.mar_pol <- data.complete(GSS[,"politics","marital"], c("politics","marital"))
GSS.mar_pol <- data.complete(GSS, c("politics","marital"))
GSS.mar_pol <- data.complete(GSS[,c("politics","marital")], c("politics","marital"))
table(GSS.mar_pol)
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE, chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SAS"/"SPSS")
install.packages("gmodels")
library(gmodels)
library(MASS)
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE, chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SAS"/"SPSS")
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE, chisq = TRUE, expected = TRUE, sresid = TRUE)
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE, chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
cs <- chisq.test(GSS$marital, GSS$politics)
cs
##leverage CrossTable function to compute Pearson's chisq test
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE, chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
# also leverage a different function to compare results
cs <- chisq.test(GSS$marital, GSS$politics)
#since this is a test of indepedence, leverage cramer's v for effect size
cramers_v = function(cs)
{
cv = sqrt(cs$statistic / (sum(cs$observed) * (min(dim(cs$observed))-1)))
print.noquote("Cramer's V:")
return(as.numeric(cv))
}
cramers_v(cs)
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE,
prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE
chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE,
prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE,
chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
cramers_v(cs)
summary(GSS$agewed)
describe(GSS$agewed)
hist(GSS$agewed)
describe(GSS$tvhours)
hist(GSS$tvhours)
scatterplot(GSS$agewed, GSS$tvhours)
describe(GSS$tvhours)
describe(GSS$agewed)
cor.test(GSS$agewed, GSS$tvhours)
cor.test(GSS$agewed, GSS$tvhours, use = "complete.obs", method = "person")
cor.test(GSS$agewed, GSS$tvhours, use = "complete.obs", method = "pearson")
cor(GSS[,c("agewed", "tvhours"")], use = "complete.obs")
cor(GSS[,c("agewed", "tvhours")], use = "complete.obs")
cor(GSS[,c("agewed", "tvhours")], use = "complete.obs")**2
cor.test(GSS$agewed, GSS$tvhours, use = "complete.obs", method = "pearson")
cor.results <- cor.test(GSS$agewed, GSS$tvhours, use = "complete.obs", method = "pearson")
cor.results$estimate
cor.results$estimate**2
GSS.age_tv <- subset(GSS, tvhours <= 24, select = c(agewed,tvhours))
hist(GSS.age_tv$tvhours)
GSS.age_tv <- subset(GSS.age_tv, agewed >0 | agewed<=90)
GSS.age_tv <- subset(GSS.age_tv, agewed >0 | agewed<=90)
GSS.age_tv <- subset(GSS.age_tv, agewed > 0 & agewed<=90)
hist(GSS.age_tv$tvhours)
hist(GSS.age_tv$agewed)
scatterplot(GSS.age_tv$agewed, GSS$tvhours)
scatterplot(GSS.age_tv$agewed, GSS.age_tv$tvhours)
cor.results <- cor.test(GSS.age_tv$agewed, GSS.age_tv$tvhours, use = "complete.obs", method = "pearson")
cor.results
cor.results$estimate**2
cor(GSS[,c("agewed", "tvhours")], use = "complete.obs")**2
#check the correlation
cor.results <- cor.test(GSS.age_tv$agewed, GSS.age_tv$tvhours, use = "complete.obs", method = "pearson")
cor.results
# compute r^2
cor.results$estimate**2
cor(GSS.agewed[,c("agewed", "tvhours")], use = "complete.obs")**2
cor(GSS.age_tv[,c("agewed", "tvhours")], use = "complete.obs")**2
levels(GSS$marital)
df$marital_dummy <- changelevels(df$marital, 1=c("married"), 0=c("widowed", "divoreced", "separated", "never married"))
GSS$marital_dummy <- changelevels(GSS$marital, 1=c"married"), 0=c("widowed", "divoreced", "separated", "never married"))
GSS$marital_dummy <- changelevels(GSS$marital, one=c"married"), zero=c("widowed", "divoreced", "separated", "never married"))
GSS$marital_dummy <- changelevels(GSS$marital, one=c("married"), zero=c("widowed", "divoreced", "separated", "never married"))
changelevels <- function(f, ...) {
f <- as.factor(f)
levels(f) <- list(...)
f
}
GSS$marital_dummy <- changelevels(GSS$marital, one=c("married"), zero=c("widowed", "divoreced", "separated", "never married"))
levels(GSS$marital)
levels(GSS$marital_dummy)
GSS$marital_dummy <- changelevels(GSS$marital, 1=c("married"), 0=c("widowed", "divoreced", "separated", "never married"))
levels(GSS$marital_dummy)
summary(GSS$marital_dummy)
GSS$marital_dummy <- changelevels(GSS$marital, 1=c("married"), zero=c("widowed", "divorced", "separated", "never married"))
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 3/')
rm( list = ls() )
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
library(gmodels)
library(MASS)
#load supplied R data file
load("GSS.Rdata")
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
#question 14
#inspect variable to check on categories
summary(GSS$marital)
##appears NA is a string in Marital, recode to true NA
is.na(GSS) <- GSS=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
GSS$marital <- factor(GSS$marital)
# true NA's now
summary(GSS$marital)
# check politics as well
summary(GSS$politics)
#created NA subsetted dataset to run chi square test on
GSS.mar_pol <- data.complete(GSS[,c("marital","politics")], c("marital","politics"))
#review tabulated results after removing null
table(GSS.mar_pol)
##leverage CrossTable function to compute Pearson's chisq test
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE,
prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE,
chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
# also leverage a different function to compare results
cs <- chisq.test(GSS$marital, GSS$politics)
#since this is a test of indepedence, leverage cramer's v for effect size
cramers_v = function(cs)
{
cv = sqrt(cs$statistic / (sum(cs$observed) * (min(dim(cs$observed))-1)))
print.noquote("Cramer's V:")
return(as.numeric(cv))
}
cramers_v(cs)
#question 15
#check how linear the variables are
#inspect variable
describe(GSS$agewed)
#agewed is is not normally distributed and exhibits leptokurtic positive skew
hist(GSS$agewed)
#inspect tvhours
describe(GSS$tvhours)
#tvhours are even more non-normally distributed and have some outliers
hist(GSS$tvhours)
#subset dataset because tvhours variable  cannot exceed 24
GSS.age_tv <- subset(GSS, tvhours <= 24, select = c(agewed,tvhours))
#subset again because 0, 98 and 99 are invalid for agewed
GSS.age_tv <- subset(GSS.age_tv, agewed > 0 & agewed<=90)
#review histogram again
hist(GSS.age_tv$tvhours)
hist(GSS.age_tv$agewed)
# Use a scatterplot to see how linear the relationship looks on the new
# variables
scatterplot(GSS.age_tv$agewed, GSS.age_tv$tvhours)
#check the correlation
cor.results <- cor.test(GSS.age_tv$agewed, GSS.age_tv$tvhours,
use = "complete.obs", method = "pearson")
cor.results
# compute r^2
cor.results$estimate**2
## compute r^2 another way with a correlation matrix
cor(GSS.age_tv[,c("agewed", "tvhours")], use = "complete.obs")**2
levels(GSS$marital_dummy)
#create simple changelevel function wrapper
changelevels <- function(f, ...) {
f <- as.factor(f)
levels(f) <- list(...)
f
}
GSS$marital_dummy <- changelevels(GSS$marital, one=c("married"), zero=c("widowed", "divorced", "separated", "never married"))
summary(GSS$marital_dummy)
View(GSS)
GSS.marital_dummy <- subset(GSS, age == 24, select = c(age,marital_dummy))
GSS.marital_dummy <- subset(GSS, age == 23, select = c(age,marital_dummy))
View(GSS.marital_dummy)
by(GSS.marital_dummy$age,  GSS.marital_dummy$marital_dummy, mean, na.rm = TRUE)
GSS$martial_dummy2 <- ifelse(GSS$marital == "married",1,0)
summary(GSS$martial_dummy2)
#set up working envrionment
##running on macbook air, set relevant directory
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 3/')
rm( list = ls() )
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
library(gmodels)
library(MASS)
#load supplied R data file
load("GSS.Rdata")
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
#question 14
#inspect variable to check on categories
summary(GSS$marital)
##appears NA is a string in Marital, recode to true NA
is.na(GSS) <- GSS=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
GSS$marital <- factor(GSS$marital)
# true NA's now
summary(GSS$marital)
# check politics as well
summary(GSS$politics)
#created NA subsetted dataset to run chi square test on
GSS.mar_pol <- data.complete(GSS[,c("marital","politics")], c("marital","politics"))
#review tabulated results after removing null
table(GSS.mar_pol)
##leverage CrossTable function to compute Pearson's chisq test
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE,
prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE,
chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
# also leverage a different function to compare results
cs <- chisq.test(GSS$marital, GSS$politics)
#since this is a test of indepedence, leverage cramer's v for effect size
cramers_v = function(cs)
{
cv = sqrt(cs$statistic / (sum(cs$observed) * (min(dim(cs$observed))-1)))
print.noquote("Cramer's V:")
return(as.numeric(cv))
}
cramers_v(cs)
#question 15
#check how linear the variables are
#inspect variable
describe(GSS$agewed)
#agewed is is not normally distributed and exhibits leptokurtic positive skew
hist(GSS$agewed)
#inspect tvhours
describe(GSS$tvhours)
#tvhours are even more non-normally distributed and have some outliers
hist(GSS$tvhours)
#subset dataset because tvhours variable  cannot exceed 24
GSS.age_tv <- subset(GSS, tvhours <= 24, select = c(agewed,tvhours))
#subset again because 0, 98 and 99 are invalid for agewed
GSS.age_tv <- subset(GSS.age_tv, agewed > 0 & agewed<=90)
#review histogram again
hist(GSS.age_tv$tvhours)
hist(GSS.age_tv$agewed)
# Use a scatterplot to see how linear the relationship looks on the new
# variables
scatterplot(GSS.age_tv$agewed, GSS.age_tv$tvhours)
#check the correlation
cor.results <- cor.test(GSS.age_tv$agewed, GSS.age_tv$tvhours,
use = "complete.obs", method = "pearson")
cor.results
# compute r^2
cor.results$estimate**2
## compute r^2 another way with a correlation matrix
cor(GSS.age_tv[,c("agewed", "tvhours")], use = "complete.obs")**2
#question 16
#create dummy variable for married using if else
GSS$martial_dummy <- ifelse(GSS$marital == "married",1,0)
#check summary stats for this variable
summary(GSS$martial_dummy)
#create subset for variable
GSS.marital_dummy <- subset(GSS, age == 23, select = c(age,marital_dummy))
View(GSS.marital_dummy)
GSS$martial_dummy <- ifelse(GSS$marital == "married",1,0)
GSS$martial_dummy <- ifelse(GSS$marital == "married",1,0)
summary(GSS$martial_dummy)
GSS.marital_dummy <- subset(GSS, age == 23, select = c(age,marital_dummy))
GSS$marital <- ifelse(GSS$marital == "married",1,0)
summary(GSS$GSS$marital_dummy)
GSS$marital <- ifelse(GSS$marital == "married",1,0)
summary(GSS$marital_dummy)
#set up working envrionment
##running on macbook air, set relevant directory
setwd('/Users/ceccarelli/MIDS/DATASCI_W203/Assignments/Labs/Lab 3/')
rm( list = ls() )
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
library(gmodels)
library(MASS)
#load supplied R data file
load("GSS.Rdata")
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
#question 14
#inspect variable to check on categories
summary(GSS$marital)
##appears NA is a string in Marital, recode to true NA
is.na(GSS) <- GSS=="NA"
# Can fix the remaining "NA" after fix by recreating the factor
GSS$marital <- factor(GSS$marital)
# true NA's now
summary(GSS$marital)
# check politics as well
summary(GSS$politics)
#created NA subsetted dataset to run chi square test on
GSS.mar_pol <- data.complete(GSS[,c("marital","politics")], c("marital","politics"))
#review tabulated results after removing null
table(GSS.mar_pol)
##leverage CrossTable function to compute Pearson's chisq test
CrossTable(GSS.mar_pol$marital, GSS.mar_pol$politics, fisher = TRUE,
prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE,
chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
# also leverage a different function to compare results
cs <- chisq.test(GSS$marital, GSS$politics)
#since this is a test of indepedence, leverage cramer's v for effect size
cramers_v = function(cs)
{
cv = sqrt(cs$statistic / (sum(cs$observed) * (min(dim(cs$observed))-1)))
print.noquote("Cramer's V:")
return(as.numeric(cv))
}
cramers_v(cs)
#question 15
#check how linear the variables are
#inspect variable
describe(GSS$agewed)
#agewed is is not normally distributed and exhibits leptokurtic positive skew
hist(GSS$agewed)
#inspect tvhours
describe(GSS$tvhours)
#tvhours are even more non-normally distributed and have some outliers
hist(GSS$tvhours)
#subset dataset because tvhours variable  cannot exceed 24
GSS.age_tv <- subset(GSS, tvhours <= 24, select = c(agewed,tvhours))
#subset again because 0, 98 and 99 are invalid for agewed
GSS.age_tv <- subset(GSS.age_tv, agewed > 0 & agewed<=90)
#review histogram again
hist(GSS.age_tv$tvhours)
hist(GSS.age_tv$agewed)
# Use a scatterplot to see how linear the relationship looks on the new
# variables
scatterplot(GSS.age_tv$agewed, GSS.age_tv$tvhours)
#check the correlation
cor.results <- cor.test(GSS.age_tv$agewed, GSS.age_tv$tvhours,
use = "complete.obs", method = "pearson")
cor.results
# compute r^2
cor.results$estimate**2
## compute r^2 another way with a correlation matrix
cor(GSS.age_tv[,c("agewed", "tvhours")], use = "complete.obs")**2
#create dummy variable for married using if else
GSS$marital_dummy <- ifelse(GSS$marital == "married",1,0)
#check summary stats for this variable
summary(GSS$marital_dummy)
#create subset for variable
GSS.marital_dummy <- subset(GSS, age == 23, select = c(age,marital_dummy))
View(GSS.marital_dummy)
mean(GSS.marital_dummy$marital_dummy)
summary(GSS.marital_dummy$marital_dummy)
GSS.marital_dummy <- subset(GSS, age == 23, select = c(age,marital_dummy,child))
GSS.marital_dummy <- subset(GSS, age == 23, select = c(age,marital_dummy,childs
))
mean(GSS.marital_dummy$marital_dummy)
summary(GSS.marital_dummy$marital_dummy)
summary(GSS.marital_dummy)
View(GSS.marital_dummy)
by(GSS.marital_dummy$marital_dummy, GSS.marital_dummy$childs, mean, na.rm = TRUE)
by(GSS.marital_dummy$childs,GSS.marital_dummy$marital_dummy, mean, na.rm = TRUE)
qqnorm(GSS.marital_dummy$childs)
wilcox.test(GSS.marital_dummy$childs ~ GSS.marital_dummy$marital_dummy)
chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")0.0008976593
wilcox.test(GSS.marital_dummy$childs ~ GSS.marital_dummy$marital_dummy)
children_m = GSS.marital_dummy$childs[GSS.marital_dummy$marital_dummy==1]
children_nm = GSS.marital_dummy$childs[GSS.marital_dummy$marital_dummy==0]
cohens_d(children_m, children_nm)
cohens_d <- function(x, y) {
# this function takes two vectors as inputs, and compares
# their means
# first, compute the pooled standard error
lx = length(subset(x,!is.na(x)))
ly = length(subset(y,!is.na(y)))
# numerator of the pooled variance:
num = (lx-1)*var(x, na.rm=T) + (ly-1)*var(y, na.rm=T)
pooled_var = num / (lx + ly - 2) # variance
pooled_sd = sqrt(pooled_var)
# finally, compute cohen's d
cd = abs(mean(x, na.rm=T) - mean(y, na.rm=T)) / pooled_sd
return(cd)
}
cohens_d(children_m, children_nm)
summary(GSSrelig)
summary(GSS$relig)
levels(GSS$relig)
changelevels <- function(f, ...) {
f <- as.factor(f)
levels(f) <- list(...)
f
}
GSS$relig_clean <- changelevels(GSS$relig, Protestant=c("Protestant"), Catholic=c("Catholic"), Jewish=c("None"),None=c("None"),Other=c("Other","DK"))
levels(GSS$relig)
levels(GSS$relig_clean)
GSS.age_relig <- subset(GSS, agewed > 0 & agewed<=90)
GSS.age_relig <- subset(GSS.age_relig, select=c("agewed","relig_clean"))
GSS.age_relig <- data.complete(c("agewed","relig_clean"))
GSS.age_relig <- data.complete(GSS,c("agewed","relig_clean"))
GSS.age_relig <- subset(GSS, agewed > 0 & agewed<=90)
GSS.age_relig <- subset(GSS.age_relig, select=c("agewed","relig_clean"))
GSS.age_relig <- data.complete(GSS.age_relig ,c("agewed","relig_clean"))
hist(GSS.age_relig$agewed)
library(ggplot)
ggplot
library(ggplot2)
qqplot = qplot(sample = GSS.age_relig$agewed, stat="qq")
qqplot
by(GSS.age_relig$agewed, GSS.age_relig$relig_clean, mean, na.rm=T)
mean(GSS.age_relig$agewed, na.rm=T)
aovm = aov(agewed ~ relig_clean, GSS.age_relig)
summary(aovm)
pw = pairwise.t.test(GSS.age_relig$agewed, GSS.age_relig$relig_clean, p.adjust.method = "bonferroni")
pw
sig_stars = function(p)
{
stars = symnum(p, na = F, cutpoints = c(0, .001, .01, .05, .1, 1), symbols=c("***","**", "*", ".", " "))
return( paste(round(p, 3), stars) )
}
t_table = apply(pw$p.value, c(1,2), sig_stars)
t_table
t_table = noquote( t_table )
t_table
t_table = noquote(apply(pw$p.value, c(1,2), sig_stars)
t_table
t_table = noquote( apply(pw$p.value, c(1,2), sig_stars) )
t_table
hist(GSS$income91)
table(GSS$age,GSS$country)
table(GSS$relig,GSS$gender)
table(GSS$relig,GSS$gender)
table(GSS$relig,GSS$gender)
t_table = noquote(apply(pw$p.value, c(1,2), sig_stars)
table(GSS$relig)
table(GSS$relig)
table(GSS$relig,GSS$sibs)
hist(GSS$educ)
describe(GSS$educ)
hist(GSS$educ)
hist(GSS$tvhours)
summary(GSS$politics)
summary(GSS$news)
table(GSS$politics,GSS$news)
table(GSS$relig,GSS$sibs)
View(GSS)
by(GSS$sibs[GSS$relig=="Catholic"],GSS$sex,mean, na.rm = TRUE)
by(GSS$sibs[GSS$relig=="Catholic"],GSS$sex,mean, na.rm = TRUE)
by(GSS$sibs[GSS$relig=="Catholic"],GSS$sex[GSS$relig=="Catholic"],mean, na.rm = TRUE)
table(GSS$sex[GSS$relig=="Catholic"],GSS$sibs[GSS$relig=="Catholic"])
hist(GSS$sibs[GSS$relig=="Catholic"])
hist(subset(GSS[GSS$relig=="Catholic"],sibs<90,select = c("sibs"))
hist(subset(GSS[GSS$relig=="Catholic"],sibs<90,select = c("sibs")))
hist(subset(GSS,sibs<90&relig=="Catholic",select = c("sibs")))
subset(GSS,sibs<90 & relig=="Catholic",select = c("sibs"))
hist(subset(GSS,sibs<90 & relig=="Catholic",select = c("sibs")))
as.numeric(subset(GSS,sibs<90 & relig=="Catholic",select = c("sibs")))
l <- subset(GSS,sibs<90 & relig=="Catholic",select = c("sibs"))
View(l)
l$sibs
hist(l$sibs)
describe(GSS$country)
describe(GSS$country)
summary(GSS$country)
by(GSS$age,GSS$country,mean,na.rm=TRUE)
summary(GSS$income91)
table(GSS$income91[GSS$sex=="men"],GSS$visitart[GSS$sex=="men"])
View(GSS)
table(GSS$income91[GSS$sex=="Male"],GSS$visitart[GSS$sex=="Male"])
