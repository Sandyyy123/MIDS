install.packages("Rcmdr")
install.packages("ggplot2")
data.worldbank <-read.csv
?
2.45-2
/2
.45/2
pnorm(.225)
pnorm(2.45,2,2)
prime.sieve <- function(number, first_prime=2) {
##hold a vector of numbers to check in a variable
##start at 2 given the above note using the function's default argument
to_check <- c(first_prime:number)
##initatilize primes variable vector to store results into
primes <- NULL
count <- 0
##initatilize loop variable
loop <- first_prime
while (loop*loop < number) {
primes <- c(primes, to_check[1])
##remove multiples from to_check vector
to_check <- subset(to_check, !to_check %% loop == 0)
## update loop variable with next prime after multiples are removed
loop <- to_check[1]
count <- count+1
}
##given the loop stops "prematurely", concatenate remaining primes from to_check vector with primes storage vector
primes <- c(primes,to_check)
##can comment out these two print lines, for info only
print(paste("Loop executed ", count, " times"))
print(paste("Your number,", number, ", contains ", length(primes), " primes up to it and they are:"))
return(primes)
}
prime.sieve(17)
t.test <- function(data=c(), mu, pop.sd, two.tailed=TRUE, significance=.05) {
xbar <- mean(data)
n <- length(data)
z <- (xbar - mu) / (pop.sd /sqrt(n))
if (two.tailed==TRUE) {
p <- 2*pnorm(-abs(z))
} else {
p <- pnorm(-abs(z))
}
return(p)
}
x<-rnorm(n=10,2,2)
x
mean(x)
t.test(x,2,2)
t.test(x,2,2,FALSE)
install.packages("calibrate")
#set up working envrionment
setwd('/Users/gdc/Documents/MIDS/DATASCI_W203/Assignments/Labs/Lab 1')
rm( list = ls() )
#load libraries
library(calibrate) # used to label xy points in eventual scatter
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
##force R not to use scientific notation
options("scipen"=10, "digits"=4)
##load GDP data as a data frame
gdp.data <- read.csv("GDP_World_Bank1.csv", sep=",", header = TRUE)
#count number of rows with incomplete entries
nrow(gdp.data[!complete.cases(gdp.data),])
gdp.data_complete <- data.complete(gdp.data, c('gdp2011', 'gdp2012'))
#create new nominal variable based on gdp increase
gdp.data_complete$gdp_growth <- gdp.data_complete$gdp2012 - gdp.data_complete$gdp2011
#create and store mean of new variable
mx <- mean(gdp.data_complete$gdp_growth)
paste("mean is: ", mx)
install.packages("psych")
```{r}
#set up working envrionment
setwd('/Users/gdc/Documents/MIDS/DATASCI_W203/Assignments/Labs/Lab 2')
rm( list = ls() )
#load supplied R data file
load("GSS.Rdata")
#make copy of DF
GSS_copy <- GSS[,]
#check for when agewed might exceed age
GSS$agewed.spurious <- GSS$agewed > GSS$age
#view tabulated counts by value
#View(data.frame(table(GSS$agewed)))
#review counts of spurious agewed data
summary(GSS$agewed.spurious)
#computer agewed mean prior to transformation
GSS.agewed.mean.before <-  mean(GSS$agewed)
#review the distinct agewed values that don't correspond with age
#View(data.frame(table(GSS$agewed[(GSS$agewed == 0 | (GSS$agewed.spurious == TRUE))])))
#update agewed variable in three instances (separated for clarity)
#NA when agewed = 0
GSS$agewed[GSS$agewed == 0] <- NA
#NA when agewed > wed -- keep one value of 99 (agewed == age)
GSS$agewed[GSS$agewed.spurious == TRUE] <- NA
#check to see how many variables were set to NA
GSS.na.summary <- is.na(GSS$agewed)
summary(GSS.na.summary)
#define function to omit row values where only certain columns are NA
data.complete <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
#update dataset to remove NA values only where agedwed is NA, should remove 299 values
GSS <- data.complete(GSS, c("agewed"))
#double check
nrow(GSS_copy)-nrow(GSS)
#compute mean
GSS.agewed.mean.after <- mean(GSS$agewed)
#review hist of updated agewed variable
hist(GSS$agewed)
```
```{r}
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
#perform a qqplot to visually inspect normality
qqplot = qplot(sample = GSS$agewed, stat="qq")
qqplot
#perform a shapiro wilk test shapiro.test(GSS$agewed)
#check gender variable
summary(GSS$sex) #great no NAs
variances <- list(by(GSS$agewed, GSS$sex, var, na.rm = TRUE))
variances
#check to see if variances are similar enough
leveneTest(GSS$agewed, GSS$sex)
```
#Load relevant packages
library(ggplot2)
library(car)
library(psych)
#perform a qqplot to visually inspect normality
qqplot = qplot(sample = GSS$agewed, stat="qq")
qqplot
#perform a shapiro wilk test shapiro.test(GSS$agewed)
#check gender variable
summary(GSS$sex) #great no NAs
variances <- list(by(GSS$agewed, GSS$sex, var, na.rm = TRUE))
variances
#check to see if variances are similar enough
leveneTest(GSS$agewed, GSS$sex)
#Define function to compute p-vale
pval= function(data, mu, pop.sd, twotailed=TRUE) {
len <- length(data)
m <- mean(data)
se <- pop.sd / sqrt(len)
zscore <- (m-mu) / se
pvalue <- (twotailed + 1 ) * pnorm(abs(zscore),0,1, lower.tail = FALSE)
df <- data.frame(pvalue , (pvalue<=0.05))
colnames(df) <- c("pvalue","reject")
return(df)
}
#sample 100 values from GSS$agewed vector
GSS.sample <- sample(GSS$agewed,100)
#run test
#pval(GSS.sample,23,5)
#commented out evaluation because it will differ between when I first ran the test and when its run to create the Rmd pdf.
